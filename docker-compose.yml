version: '3.8'

services:
  # FastAPI Application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ecommerce_bot
      - REDIS_URL=redis://redis:6379/0
      - REDIS_QUEUE_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - ecommerce-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ecommerce_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce-network

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ecommerce-network

  # Redis Commander (optional - for Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - ecommerce-network

  # pgAdmin (optional - for PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ecommerce-network

  # Celery Worker for background tasks
  worker:
    build: .
    command: python -m celery -A src.core.queue worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ecommerce_bot
      - REDIS_URL=redis://redis:6379/0
      - REDIS_QUEUE_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - ecommerce-network

  # Celery Beat for scheduled tasks
  beat:
    build: .
    command: python -m celery -A src.core.queue beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ecommerce_bot
      - REDIS_URL=redis://redis:6379/0
      - REDIS_QUEUE_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - ecommerce-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  ecommerce-network:
    driver: bridge